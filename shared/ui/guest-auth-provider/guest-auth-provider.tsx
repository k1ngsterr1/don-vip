"use client";

import type React from "react";
import { useEffect } from "react";
import { apiClient } from "@/shared/config/apiClient";
import { useAuthStore } from "@/entities/auth/store/auth.store";

export function GuestAuthProvider({ children }: { children: React.ReactNode }) {
  const { user, setUser, setTokens, isAuthenticated } = useAuthStore();

  useEffect(() => {
    const checkGuestUser = async () => {
      console.log("üü° [GuestAuth] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...");

      if (isAuthenticated || user) {
        console.log("‚úÖ [GuestAuth] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:", user);
        return;
      }

      const localStorageUser = localStorage.getItem("auth-storage");
      const userId = localStorage.getItem("userId");

      console.log("üóÉÔ∏è [GuestAuth] –°–æ–¥–µ—Ä–∂–∏–º–æ–µ localStorage:");
      console.log("auth-storage:", localStorageUser);
      console.log("userId:", userId);

      if (!userId) {
        console.log("üÜï [GuestAuth] –ì–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ...");

        try {
          const response = await apiClient.post("/api/auth/guest");

          console.log("üì• [GuestAuth] –û—Ç–≤–µ—Ç –æ—Ç API:", response.data);

          const { user: guestUser, accessToken, refreshToken } = response.data;

          localStorage.setItem("userId", guestUser.id);
          console.log(
            "üíæ [GuestAuth] –°–æ—Ö—Ä–∞–Ω–∏–ª–∏ userId –≤ localStorage:",
            guestUser.id
          );

          console.log("‚úÖ [GuestAuth] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Ç–æ–∫–µ–Ω—ã.");
        } catch (error) {
          console.error("‚ùå [GuestAuth] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–æ—Å—Ç—è:", error);
        }
      } else {
        console.log("üë§ [GuestAuth] userId –Ω–∞–π–¥–µ–Ω –≤ localStorage:", userId);
      }
    };

    checkGuestUser();
  }, [isAuthenticated, user, setUser, setTokens]);

  return <>{children}</>;
}
