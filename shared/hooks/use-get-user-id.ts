import { apiClient } from "../config/apiClient";

export const getUserId = async (): Promise<string> => {
  if (typeof window === "undefined") {
    throw new Error("‚ùå getUserId called on server");
  }

  const userId = localStorage.getItem("userId");

  const isNumber = (val: string) => /^\d+$/.test(val);

  // –ï—Å–ª–∏ userId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º ‚Äî —Å–æ–∑–¥–∞—ë–º –≥–æ—Å—Ç–µ–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç
  if (!userId || !isNumber(userId)) {
    if (userId) {
      console.warn("‚ö†Ô∏è [GuestAuth] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π userId, —É–¥–∞–ª—è–µ–º...");
      localStorage.removeItem("userId");
    }

    console.log("üÜï [GuestAuth] –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Å—Ç–µ–≤–æ–≥–æ userId...");
    try {
      const res = await apiClient.post("/auth/guest");
      const { id } = res.data;

      localStorage.setItem("userId", id);
      console.log("üíæ [GuestAuth] –°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –Ω–æ–≤—ã–π userId:", id);
      return id;
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–æ—Å—Ç—è:", error);
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    }
  }

  return userId;
};
